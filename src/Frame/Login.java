/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import AppPackage.AnimationClass;
import Entidades.Jugador;
import Entidades.Pregunta;
import Entidades.Usuario;
import MetodosTipoClases.TextPrompt;
import java.awt.Component;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author SIMON SANCHEZ ALVAREZ
 */
public class Login extends javax.swing.JFrame {

    private static ArrayList<Usuario> arrayUsuarios = new ArrayList<>();
    private static ArrayList<Jugador> arrayJugadores = new ArrayList<>();
    private static ArrayList<ArrayList<Pregunta>> arrayPreguntas;
    private static int puntaje, nivel_, numero_p;
    private static Jugador nuevo_jugador;

    /**
     * Creates new form Login
     */
    public Login() {
        nivel_ = 1;
        puntaje = 0;
        nuevo_jugador = new Jugador();
        initComponents();
        this.setLocationRelativeTo(null);
        jpEstadisticas.setVisible(false);
        jpOpciones.setVisible(false);
        jpPregunta.setVisible(false);
        jpRegistro.setVisible(false);
        btnJugar.setVisible(false);
        btnAvanzar.setVisible(false);
        btnAvanzar.setEnabled(false);
        btnTerminar.setVisible(false);
        btnTerminar.setEnabled(false);
        lblMasOpciones.setVisible(false);
        lblMasOpciones.setEnabled(false);
        lblRegresar.setVisible(false);
        lblRegresar.setEnabled(false);
        TextPrompt phUsuario = new TextPrompt("Usuario", txtUsuario);
        TextPrompt phClave = new TextPrompt("Contraseña", txtClave);
        //PLACHE HOLDER PREGUNTAS
        TextPrompt phR1 = new TextPrompt("Respuesta 1", txtR1);
        TextPrompt phR2 = new TextPrompt("Respuesta 2", txtR2);
        TextPrompt phR3 = new TextPrompt("Respuesta 3", txtR3);
        TextPrompt phR4 = new TextPrompt("Respuesta 4", txtR4);
        //PLACE HOLDER REGISTRO
        TextPrompt phUs = new TextPrompt("Nuevo Usuario", txtUsuario_r);
        TextPrompt phC1 = new TextPrompt("Contraseña", psContraseña1);
        TextPrompt phC2 = new TextPrompt("Confirmar contraseña", psContraseña2);
        cargarArchivoPreguntas();
        cargarArchivoUsuarios();
        cargarArchivoJugadores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jpIngreso = new javax.swing.JPanel();
        lblClave = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        txtClave = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnIngreso = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        lblMasOpciones = new javax.swing.JLabel();
        lblRegresar = new javax.swing.JLabel();
        enlaceRegistro = new javax.swing.JLabel();
        jpEstadisticas = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        lblUsuarioPantalla = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        lblOpciones1 = new javax.swing.JLabel();
        lblRegresar2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblPuntaje = new javax.swing.JLabel();
        lblComodines = new javax.swing.JLabel();
        Circulo_lupa = new javax.swing.JLabel();
        Lupa = new javax.swing.JLabel();
        jpInicio = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnJugar = new javax.swing.JButton();
        jpRegistro = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        psContraseña2 = new javax.swing.JPasswordField();
        jLabel16 = new javax.swing.JLabel();
        psContraseña1 = new javax.swing.JPasswordField();
        btnRegistro = new javax.swing.JButton();
        txtUsuario_r = new javax.swing.JTextField();
        jpOpciones = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        R4 = new javax.swing.JRadioButton();
        R1 = new javax.swing.JRadioButton();
        R2 = new javax.swing.JRadioButton();
        R3 = new javax.swing.JRadioButton();
        txtR1 = new javax.swing.JTextField();
        txtR2 = new javax.swing.JTextField();
        txtR3 = new javax.swing.JTextField();
        txtR4 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaNueva_pregunta = new javax.swing.JTextArea();
        btnAceptar = new javax.swing.JButton();
        cmbNiveles = new javax.swing.JComboBox<>();
        jpPregunta = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaPregunta = new javax.swing.JTextArea();
        R4_p = new javax.swing.JRadioButton();
        R1_p = new javax.swing.JRadioButton();
        R2_p = new javax.swing.JRadioButton();
        R3_p = new javax.swing.JRadioButton();
        btnAceptar_p = new javax.swing.JButton();
        lblConfirmacion = new javax.swing.JLabel();
        btnAvanzar = new javax.swing.JButton();
        btnTerminar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpIngreso.setBackground(new java.awt.Color(255, 255, 255));
        jpIngreso.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jpIngreso.setForeground(new java.awt.Color(255, 255, 255));
        jpIngreso.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblClave.setBackground(new java.awt.Color(10, 193, 101));
        lblClave.setFont(new java.awt.Font("Decker", 1, 24)); // NOI18N
        lblClave.setForeground(new java.awt.Color(10, 193, 101));
        lblClave.setText("Clave: ");
        jpIngreso.add(lblClave, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 130, 20));

        lblUsuario.setBackground(new java.awt.Color(10, 193, 101));
        lblUsuario.setFont(new java.awt.Font("Decker", 1, 24)); // NOI18N
        lblUsuario.setForeground(new java.awt.Color(10, 193, 101));
        lblUsuario.setText("Usuario: ");
        jpIngreso.add(lblUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, 130, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/user (Personalizado).png"))); // NOI18N
        jpIngreso.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 100, -1));

        txtUsuario.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtUsuario.setForeground(new java.awt.Color(104, 104, 104));
        txtUsuario.setBorder(null);
        jpIngreso.add(txtUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, 140, 30));
        jpIngreso.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, 210, 20));

        txtClave.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtClave.setForeground(new java.awt.Color(104, 104, 104));
        txtClave.setBorder(null);
        jpIngreso.add(txtClave, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, 140, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/user_login.png"))); // NOI18N
        jpIngreso.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/lock (Personalizado).png"))); // NOI18N
        jpIngreso.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, -1, 40));

        btnIngreso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Ingresar.PNG"))); // NOI18N
        btnIngreso.setToolTipText("");
        btnIngreso.setBorder(null);
        btnIngreso.setBorderPainted(false);
        btnIngreso.setContentAreaFilled(false);
        btnIngreso.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnIngreso.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Ingresar_on (Personalizado).PNG"))); // NOI18N
        btnIngreso.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Ingresar_on (Personalizado).PNG"))); // NOI18N
        btnIngreso.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Ingresar_on (Personalizado).PNG"))); // NOI18N
        btnIngreso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnIngresoMouseClicked(evt);
            }
        });
        jpIngreso.add(btnIngreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 450, -1, -1));
        jpIngreso.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, 210, 20));

        lblMasOpciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/menu (Personalizado).png"))); // NOI18N
        lblMasOpciones.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblMasOpciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMasOpcionesMouseClicked(evt);
            }
        });
        jpIngreso.add(lblMasOpciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        lblRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/128-log-out (Personalizado).png"))); // NOI18N
        lblRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblRegresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRegresarMouseClicked(evt);
            }
        });
        jpIngreso.add(lblRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, 60, -1, -1));

        enlaceRegistro.setFont(new java.awt.Font("Decker", 0, 12)); // NOI18N
        enlaceRegistro.setForeground(new java.awt.Color(10, 141, 52));
        enlaceRegistro.setText("Aun no estas registrado? Crea una cuenta");
        enlaceRegistro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        enlaceRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enlaceRegistroMouseClicked(evt);
            }
        });
        jpIngreso.add(enlaceRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 500, -1, -1));

        getContentPane().add(jpIngreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 580));

        jpEstadisticas.setBackground(new java.awt.Color(255, 255, 255));
        jpEstadisticas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jpEstadisticas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jpEstadisticas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Decker", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(10, 231, 39));
        jLabel12.setText("BIENVENIDO");
        jpEstadisticas.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, -1, -1));

        lblUsuarioPantalla.setFont(new java.awt.Font("Decker", 0, 18)); // NOI18N
        lblUsuarioPantalla.setForeground(new java.awt.Color(10, 231, 39));
        lblUsuarioPantalla.setText("USUARIO");
        jpEstadisticas.add(lblUsuarioPantalla, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/menu (Personalizado).png"))); // NOI18N
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        jpEstadisticas.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel15.setFont(new java.awt.Font("Decker", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(10, 231, 39));
        jLabel15.setText("TU PUNTAJE");
        jpEstadisticas.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 240, -1, -1));

        lblOpciones1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/setting (1) (Personalizado).png"))); // NOI18N
        lblOpciones1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblOpciones1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblOpciones1MouseClicked(evt);
            }
        });
        jpEstadisticas.add(lblOpciones1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, 70, -1, -1));

        lblRegresar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/128-log-out (Personalizado).png"))); // NOI18N
        lblRegresar2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblRegresar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRegresar2MouseClicked(evt);
            }
        });
        jpEstadisticas.add(lblRegresar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-30, 120, -1, -1));

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 102), 5, true));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPuntaje.setFont(new java.awt.Font("Decker", 0, 18)); // NOI18N
        lblPuntaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPuntaje.setText("puntaje");
        jPanel3.add(lblPuntaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 70, 20));

        jpEstadisticas.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, 110, 40));

        lblComodines.setFont(new java.awt.Font("SimLLHP", 0, 24)); // NOI18N
        lblComodines.setForeground(new java.awt.Color(255, 255, 255));
        lblComodines.setText("0");
        jpEstadisticas.add(lblComodines, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 430, -1, -1));

        Circulo_lupa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/circle (Personalizado).png"))); // NOI18N
        jpEstadisticas.add(Circulo_lupa, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 430, -1, -1));

        Lupa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/search (1) (Personalizado).png"))); // NOI18N
        Lupa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Lupa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LupaMouseClicked(evt);
            }
        });
        jpEstadisticas.add(Lupa, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 390, 100, 100));

        getContentPane().add(jpEstadisticas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 580));

        jpInicio.setBackground(new java.awt.Color(230, 229, 229));
        jpInicio.setForeground(new java.awt.Color(255, 255, 255));
        jpInicio.setToolTipText("");
        jpInicio.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jpInicio.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Decker", 0, 48)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(10, 231, 39));
        jLabel8.setText("INICIA SESION PARA COMENZAR");
        jpInicio.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, -1, -1));

        jLabel11.setFont(new java.awt.Font("Decker", 0, 48)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(10, 231, 39));
        jLabel11.setText("BIENVENIDO! ");
        jpInicio.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, -1, -1));

        btnJugar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/boton_jugar.PNG"))); // NOI18N
        btnJugar.setBorderPainted(false);
        btnJugar.setContentAreaFilled(false);
        btnJugar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/boton_jugar_on.PNG"))); // NOI18N
        btnJugar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/boton_jugar_on.PNG"))); // NOI18N
        btnJugar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/boton_jugar_on.PNG"))); // NOI18N
        btnJugar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnJugarMouseClicked(evt);
            }
        });
        jpInicio.add(btnJugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, -1, -1));

        getContentPane().add(jpInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, 760, 530));

        jpRegistro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Decker", 0, 48)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(10, 231, 39));
        jLabel13.setText("REGISTRO USUARIO");
        jpRegistro.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, -1, -1));

        jLabel10.setFont(new java.awt.Font("Decker", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 148, 59));
        jLabel10.setText("CONFIRMAR CLAVE: ");
        jpRegistro.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, -1, -1));

        jLabel14.setFont(new java.awt.Font("Decker", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 148, 59));
        jLabel14.setText("USUARIO: ");
        jpRegistro.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, -1, -1));

        psContraseña2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jpRegistro.add(psContraseña2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 320, 330, 30));

        jLabel16.setFont(new java.awt.Font("Decker", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 148, 59));
        jLabel16.setText("CLAVE: ");
        jpRegistro.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 240, -1, -1));

        psContraseña1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jpRegistro.add(psContraseña1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 240, 330, 30));

        btnRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/boton_aceptar (Personalizado).PNG"))); // NOI18N
        btnRegistro.setBorderPainted(false);
        btnRegistro.setContentAreaFilled(false);
        btnRegistro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegistro.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/boton_aceptar_on.PNG"))); // NOI18N
        btnRegistro.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/boton_aceptar_on.PNG"))); // NOI18N
        btnRegistro.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/boton_aceptar_on.PNG"))); // NOI18N
        btnRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistroMouseClicked(evt);
            }
        });
        jpRegistro.add(btnRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 410, 160, -1));

        txtUsuario_r.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jpRegistro.add(txtUsuario_r, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 160, 330, 30));

        getContentPane().add(jpRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, 770, 530));

        jpOpciones.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Decker", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(10, 193, 101));
        jLabel3.setText("INGRESE UNA PREGUNTA");
        jpOpciones.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, -1, -1));

        buttonGroup1.add(R4);
        jpOpciones.add(R4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 300, -1, -1));

        buttonGroup1.add(R1);
        jpOpciones.add(R1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, -1, -1));

        buttonGroup1.add(R2);
        jpOpciones.add(R2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, -1, -1));

        buttonGroup1.add(R3);
        jpOpciones.add(R3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, -1, -1));

        txtR1.setFont(new java.awt.Font("Decker", 0, 12)); // NOI18N
        txtR1.setForeground(new java.awt.Color(153, 153, 153));
        jpOpciones.add(txtR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, 310, -1));

        txtR2.setFont(new java.awt.Font("Decker", 0, 12)); // NOI18N
        txtR2.setForeground(new java.awt.Color(153, 153, 153));
        jpOpciones.add(txtR2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 240, 310, -1));

        txtR3.setFont(new java.awt.Font("Decker", 0, 12)); // NOI18N
        txtR3.setForeground(new java.awt.Color(153, 153, 153));
        jpOpciones.add(txtR3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 310, -1));

        txtR4.setFont(new java.awt.Font("Decker", 0, 12)); // NOI18N
        txtR4.setForeground(new java.awt.Color(153, 153, 153));
        jpOpciones.add(txtR4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, 310, -1));

        txaNueva_pregunta.setColumns(20);
        txaNueva_pregunta.setFont(new java.awt.Font("Decker", 0, 14)); // NOI18N
        txaNueva_pregunta.setLineWrap(true);
        txaNueva_pregunta.setRows(5);
        jScrollPane2.setViewportView(txaNueva_pregunta);

        jpOpciones.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 390, 80));

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/boton_aceptar (Personalizado).PNG"))); // NOI18N
        btnAceptar.setBorder(null);
        btnAceptar.setBorderPainted(false);
        btnAceptar.setContentAreaFilled(false);
        btnAceptar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/boton_aceptar_on.PNG"))); // NOI18N
        btnAceptar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/boton_aceptar_on.PNG"))); // NOI18N
        btnAceptar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/boton_aceptar_on.PNG"))); // NOI18N
        btnAceptar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAceptarMouseClicked(evt);
            }
        });
        jpOpciones.add(btnAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 350, 160, 40));

        cmbNiveles.setFont(new java.awt.Font("Decker", 0, 14)); // NOI18N
        cmbNiveles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1", "2", "3", "4", "5" }));
        cmbNiveles.setBorder(null);
        jpOpciones.add(cmbNiveles, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 160, 120, -1));

        getContentPane().add(jpOpciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, 760, 530));

        jpPregunta.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Decker", 0, 48)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(10, 193, 101));
        jLabel4.setText("PREGUNTA NIVEL");
        jpPregunta.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, -1, -1));

        txaPregunta.setEditable(false);
        txaPregunta.setColumns(20);
        txaPregunta.setFont(new java.awt.Font("Decker", 0, 18)); // NOI18N
        txaPregunta.setForeground(new java.awt.Color(10, 193, 101));
        txaPregunta.setLineWrap(true);
        txaPregunta.setRows(5);
        jScrollPane1.setViewportView(txaPregunta);

        jpPregunta.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 520, 110));

        buttonGroup2.add(R4_p);
        R4_p.setFont(new java.awt.Font("Decker", 0, 18)); // NOI18N
        jpPregunta.add(R4_p, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 400, -1, -1));

        buttonGroup2.add(R1_p);
        R1_p.setFont(new java.awt.Font("Decker", 0, 18)); // NOI18N
        jpPregunta.add(R1_p, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 310, -1, -1));

        buttonGroup2.add(R2_p);
        R2_p.setFont(new java.awt.Font("Decker", 0, 18)); // NOI18N
        jpPregunta.add(R2_p, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 340, -1, -1));

        buttonGroup2.add(R3_p);
        R3_p.setFont(new java.awt.Font("Decker", 0, 18)); // NOI18N
        jpPregunta.add(R3_p, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, -1, -1));

        btnAceptar_p.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/boton_aceptar (Personalizado).PNG"))); // NOI18N
        btnAceptar_p.setBorderPainted(false);
        btnAceptar_p.setContentAreaFilled(false);
        btnAceptar_p.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAceptar_p.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/boton_aceptar_on.PNG"))); // NOI18N
        btnAceptar_p.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/boton_aceptar_on.PNG"))); // NOI18N
        btnAceptar_p.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/boton_aceptar_on.PNG"))); // NOI18N
        btnAceptar_p.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAceptar_pMouseClicked(evt);
            }
        });
        jpPregunta.add(btnAceptar_p, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 440, -1, -1));

        lblConfirmacion.setFont(new java.awt.Font("Decker", 0, 18)); // NOI18N
        lblConfirmacion.setForeground(new java.awt.Color(10, 193, 101));
        jpPregunta.add(lblConfirmacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 280, 120, 30));

        btnAvanzar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/155-right-arrow.png"))); // NOI18N
        btnAvanzar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 5, true));
        btnAvanzar.setContentAreaFilled(false);
        btnAvanzar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAvanzar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAvanzarMouseClicked(evt);
            }
        });
        jpPregunta.add(btnAvanzar, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 430, 50, 50));

        btnTerminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/bt_terminar.PNG"))); // NOI18N
        btnTerminar.setBorderPainted(false);
        btnTerminar.setContentAreaFilled(false);
        btnTerminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTerminar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/bt_terminar_on.PNG"))); // NOI18N
        btnTerminar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/bt_terminar_on.PNG"))); // NOI18N
        btnTerminar.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/bt_terminar_on.PNG"))); // NOI18N
        btnTerminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTerminarMouseClicked(evt);
            }
        });
        jpPregunta.add(btnTerminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 420, -1, -1));

        getContentPane().add(jpPregunta, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, 760, 530));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8_Multiply_32px.png"))); // NOI18N
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 10, 30, 30));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8_Expand_Arrow_32px.png"))); // NOI18N
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, 30));

        jSeparator4.setForeground(new java.awt.Color(153, 153, 153));
        jPanel2.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 760, 20));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 0, 760, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        AnimationClass opciones = new AnimationClass();
        opciones.jLabelXRight(-40, 10, 10, 5, lblOpciones1);
        AnimationClass regresar = new AnimationClass();
        regresar.jLabelXRight(-30, 15, 10, 5, lblRegresar2);
        AnimationClass opcioness = new AnimationClass();
        opcioness.jLabelXLeft(10, -40, 10, 5, lblOpciones1);
        AnimationClass regresarr = new AnimationClass();
        regresarr.jLabelXLeft(15, -30, 10, 5, lblRegresar2);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        this.setState(Login.ICONIFIED);
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        int dialog = JOptionPane.YES_NO_OPTION;
        int resultado = JOptionPane.showConfirmDialog(null, "DESEA SALIR?", "SALIR", dialog, 0,
                new javax.swing.ImageIcon(getClass().getResource("/Image/signo_interrogacion (Personalizado).png")));
        if (resultado == 0) {
            if (!nuevo_jugador.getNombre().equals("") && jpPregunta.isVisible()) {
//                nuevo_jugador.setPuntajeT(0);
                if (!limpiarRepetidosJugador(nuevo_jugador)) {
                    arrayJugadores.add(nuevo_jugador);
                }
                escribirArchivoJugadores(arrayJugadores);
            }
            System.exit(0);
        }
    }//GEN-LAST:event_jLabel9MouseClicked

    private void btnIngresoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIngresoMouseClicked
        if (btnIngreso.isEnabled()) {
            if (!(txtClave.getText().equals("") || txtUsuario.getText().equals(""))) {
                if (validarUsuario(txtUsuario.getText(), txtClave.getText())) {
                    nuevo_jugador = extrarInfodeJugador(txtUsuario.getText());
                    Circulo_lupa.setVisible(false);
                    Lupa.setVisible(false);
                    lblComodines.setVisible(false);
                    lblUsuarioPantalla.setText(txtUsuario.getText());
                    lblPuntaje.setText(String.valueOf(nuevo_jugador.getPuntajeT()));
                    jpEstadisticas.setVisible(true);
                    jpIngreso.setVisible(false);
                    btnJugar.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "USUARIO INCORRECTO!",
                            "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "INGRESE UN USUARIO O UNA CONTRASEÑA",
                        "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnIngresoMouseClicked

    private void lblOpciones1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOpciones1MouseClicked
        jpInicio.setVisible(false);
        jpOpciones.setVisible(true);
    }//GEN-LAST:event_lblOpciones1MouseClicked

    private void btnAceptarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAceptarMouseClicked
        if (verificarCampos()) {
            Pregunta nueva_pregunta;
            if (R1.isSelected()) {
                nueva_pregunta = new Pregunta(txaNueva_pregunta.getText(), txtR2.getText(),
                        txtR3.getText(), txtR4.getText(), txtR1.getText(), 1);
            } else if (R2.isSelected()) {
                nueva_pregunta = new Pregunta(txaNueva_pregunta.getText(), txtR1.getText(),
                        txtR3.getText(), txtR4.getText(), txtR2.getText(), 2);
            } else if (R3.isSelected()) {
                nueva_pregunta = new Pregunta(txaNueva_pregunta.getText(), txtR1.getText(),
                        txtR2.getText(), txtR4.getText(), txtR3.getText(), 3);
            } else {
                nueva_pregunta = new Pregunta(txaNueva_pregunta.getText(), txtR1.getText(),
                        txtR2.getText(), txtR3.getText(), txtR4.getText(), 4);
            }
            int nivel = Integer.parseInt(String.valueOf(cmbNiveles.getSelectedItem()));
            arrayPreguntas.get(nivel - 1).add(nueva_pregunta);
            escribirArchivoPreguntas(arrayPreguntas.get(nivel - 1), nivel);
            jpInicio.setVisible(true);
            jpOpciones.setVisible(false);
        }
    }//GEN-LAST:event_btnAceptarMouseClicked

    private void btnJugarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnJugarMouseClicked
        Circulo_lupa.setVisible(true);
        Lupa.setVisible(true);
        lblComodines.setVisible(true);
        if(nuevo_jugador.getComodines()== 0){
            Circulo_lupa.setEnabled(false);
            Lupa.setEnabled(false);
            lblComodines.setEnabled(false);           
        }
        for (Jugador j : arrayJugadores) {
            if (j.getNombre().equals(txtUsuario.getText())) {
                lblComodines.setText(String.valueOf(j.getComodines()));
            }
        }
        jpInicio.setVisible(false);
        jpPregunta.setVisible(true);
        jLabel6.setVisible(false);
        jLabel6.setEnabled(false);
        llenarFrmPregunta();
    }//GEN-LAST:event_btnJugarMouseClicked

    private void btnAceptar_pMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAceptar_pMouseClicked
        if (btnAceptar_p.isEnabled()) {
            if (!R1_p.isSelected() && !R2_p.isSelected() && !R3_p.isSelected() && !R4_p.isSelected()) {
                JOptionPane.showMessageDialog(this, "DEBE SELECCIONAR UNA RESPUESTA "
                        + "PARA CONTINUAR",
                        "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            } else {
                btnAvanzar.setVisible(true);
                btnAvanzar.setEnabled(true);
                switch (arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getPosCorrecta()) {
                    case 1:
                        if (R1_p.isSelected()) {
                            lblConfirmacion.setText("CORRECTO");
                            lblConfirmacion.setForeground(new java.awt.Color(10, 193, 101));
                        } else {
                            lblConfirmacion.setText("INCORRECTO");
                            lblConfirmacion.setForeground(new java.awt.Color(238, 94, 94));
                        }
                        break;
                    case 2:
                        if (R2_p.isSelected()) {
                            lblConfirmacion.setText("CORRECTO");
                            lblConfirmacion.setForeground(new java.awt.Color(10, 193, 101));
                        } else {
                            lblConfirmacion.setText("INCORRECTO");
                            lblConfirmacion.setForeground(new java.awt.Color(238, 94, 94));
                        }
                        break;
                    case 3:
                        if (R3_p.isSelected()) {
                            lblConfirmacion.setText("CORRECTO");
                            lblConfirmacion.setForeground(new java.awt.Color(10, 193, 101));
                        } else {
                            lblConfirmacion.setText("INCORRECTO");
                            lblConfirmacion.setForeground(new java.awt.Color(238, 94, 94));
                        }
                        break;
                    default:
                        if (R4_p.isSelected()) {
                            lblConfirmacion.setText("CORRECTO");
                            lblConfirmacion.setForeground(new java.awt.Color(10, 193, 101));
                        } else {
                            lblConfirmacion.setText("INCORRECTO");
                            lblConfirmacion.setForeground(new java.awt.Color(238, 94, 94));
                        }
                        break;
                }
                if (lblConfirmacion.getText().equals("CORRECTO")) {
                    switch (nivel_) {
                        case 1:
                            puntaje += 850;
                            break;
                        case 2:
                            puntaje += 1050;
                            break;
                        case 3:
                            puntaje += 1250;
                            break;
                        case 4:
                            puntaje += 1450;
                            break;
                        default:
                            puntaje += 1650;
                            break;
                    }
//                    nuevo_jugador.setPuntajeT(puntaje);
                    if (nivel_ == 5) {
                        btnTerminar.setVisible(true);
                        btnTerminar.setEnabled(true);
                        btnAvanzar.setVisible(false);
                        btnAvanzar.setEnabled(false);
                    }
                } else {
                    nuevo_jugador.setPuntajeT(0);
                    Circulo_lupa.setVisible(false);
                    Lupa.setVisible(false);
                    lblComodines.setVisible(false);
                    modificarPuntajeArrayJ(nuevo_jugador);
                    escribirArchivoJugadores(arrayJugadores);
                }
                btnAceptar_p.setEnabled(false);
                lblPuntaje.setText(String.valueOf(nuevo_jugador.getPuntajeT() + puntaje));
                numero_p = 0;
                R1_p.setEnabled(false);
                R2_p.setEnabled(false);
                R3_p.setEnabled(false);
                R4_p.setEnabled(false);
            }
        }
    }//GEN-LAST:event_btnAceptar_pMouseClicked

    private void btnAvanzarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAvanzarMouseClicked
        if (lblConfirmacion.getText().equals("INCORRECTO")) {
            JOptionPane.showMessageDialog(this, "DESAFORTUNADAMENTE HAS PERDIDO TU ACUMULADO ",
                    "RAYOS", 0, new javax.swing.ImageIcon(getClass().getResource("/Image/give-up (Personalizado).png")));
            nuevo_jugador.setPuntajeT(0);
            modificarPuntajeArrayJ(nuevo_jugador);
            escribirArchivoJugadores(arrayJugadores);
            JOptionPane.showMessageDialog(this, "LOS DATOS FUERON GUARDADOS "
                    + "CON EXITO EN EL ARCHIVO USUARIOS/JUGADORES.txt", "GUARDADO EXITOSO",
                    JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);
        } else {
            buttonGroup2.clearSelection();
            R1_p.setEnabled(true);
            R2_p.setEnabled(true);
            R3_p.setEnabled(true);
            R4_p.setEnabled(true);
            nivel_++;
            lblConfirmacion.setText("");
            jLabel4.setText("PREGUNTA NIVEL");
            llenarFrmPregunta();
            btnAvanzar.setVisible(false);
            btnAvanzar.setEnabled(false);
            btnAceptar_p.setEnabled(true);
        }
    }//GEN-LAST:event_btnAvanzarMouseClicked

    private void lblMasOpcionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMasOpcionesMouseClicked
        AnimationClass opciones = new AnimationClass();
        opciones.jLabelXRight(-40, 10, 10, 5, lblRegresar);
        AnimationClass opcioness = new AnimationClass();
        opcioness.jLabelXLeft(10, -40, 10, 5, lblRegresar);
    }//GEN-LAST:event_lblMasOpcionesMouseClicked

    private void enlaceRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enlaceRegistroMouseClicked
        jpInicio.setVisible(false);
        jpRegistro.setVisible(true);
        lblMasOpciones.setEnabled(true);
        lblMasOpciones.setVisible(true);
        lblRegresar.setEnabled(true);
        lblRegresar.setVisible(true);
        txtUsuario.setEnabled(false);
        txtClave.setEnabled(false);
        btnIngreso.setEnabled(false);
        txtUsuario.setText("");
        txtClave.setText("");
    }//GEN-LAST:event_enlaceRegistroMouseClicked

    private void btnRegistroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistroMouseClicked
        if (txtUsuario_r.getText().equals("") || psContraseña1.getText().equals("") || psContraseña2.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "DEBE LLENAR TODOS LOS CAMPOS", "ATENCION", JOptionPane.INFORMATION_MESSAGE);
        } else {
            if (!psContraseña1.getText().equals(psContraseña2.getText())) {
                JOptionPane.showMessageDialog(this, "LAS CONTRASEÑAS DEBEN COINCIDIR",
                        "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                if (!validarUsuarioRepetido(txtUsuario_r.getText())) {
                    Usuario nuevo_usuario = new Usuario(txtUsuario_r.getText(), psContraseña1.getText());
                    arrayUsuarios.add(nuevo_usuario);
                    escribirArchivoUsuarios(arrayUsuarios);
                    jpRegistro.setVisible(false);
                    jpInicio.setVisible(true);
                    lblMasOpciones.setEnabled(false);
                    lblMasOpciones.setVisible(false);
                    lblRegresar.setEnabled(false);
                    lblRegresar.setVisible(false);
                    txtUsuario.setEnabled(true);
                    txtClave.setEnabled(true);
                    btnIngreso.setEnabled(true);
                    txtUsuario_r.setText("");
                } else {
                    JOptionPane.showMessageDialog(this, "EL USUARIO YA EXISTE, POR FAVOR INGRESE OTRO DIFERENTE",
                            "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
                }
                psContraseña1.setText("");
                psContraseña2.setText("");
            }
        }
    }//GEN-LAST:event_btnRegistroMouseClicked

    private void lblRegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRegresarMouseClicked
        jpRegistro.setVisible(false);
        txtUsuario.setEnabled(true);
        txtClave.setEnabled(true);
        btnIngreso.setEnabled(true);
        jpInicio.setVisible(true);
        lblMasOpciones.setEnabled(false);
        lblMasOpciones.setVisible(false);
        lblRegresar.setEnabled(false);
        lblRegresar.setVisible(false);
    }//GEN-LAST:event_lblRegresarMouseClicked

    private void lblRegresar2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRegresar2MouseClicked
        if (jpOpciones.isVisible()) {
            jpOpciones.setVisible(false);
            jpInicio.setVisible(true);
        } else if (jpInicio.isVisible()) {
            jpEstadisticas.setVisible(false);
            jpIngreso.setVisible(true);
            nuevo_jugador.setNombre("");
            btnJugar.setVisible(false);
            txtUsuario.setText("");
            txtClave.setText("");
        }
    }//GEN-LAST:event_lblRegresar2MouseClicked

    private void LupaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LupaMouseClicked
        if (Lupa.isEnabled()) {
            if (!lblComodines.getText().equals("0")) {
                lblComodines.setText(String.valueOf(Integer.parseInt(lblComodines.getText()) - 1));
                nuevo_jugador.setComodines(nuevo_jugador.getComodines() - 1);
                if (nuevo_jugador.getComodines() == 0) {
                    Lupa.setEnabled(false);
                    Circulo_lupa.setEnabled(false);
                    lblComodines.setEnabled(false);
                }
                switch (nivel_) {
                    case 1:
                        puntaje += 850;
                        break;
                    case 2:
                        puntaje += 1050;
                        break;
                    case 3:
                        puntaje += 1250;
                        break;
                    case 4:
                        puntaje += 1450;
                        break;
                    default:
                        puntaje += 1650;
                        break;
                }
                lblPuntaje.setText(String.valueOf(puntaje));
                switch (arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getPosCorrecta()) {
                    case 1:
                        R1_p.setSelected(true);
                        R1_p.setEnabled(false);
                        R2_p.setEnabled(false);
                        R3_p.setEnabled(false);
                        R4_p.setEnabled(false);
                        break;
                    case 2:
                        R2_p.setSelected(true);
                        R1_p.setEnabled(false);
                        R2_p.setEnabled(false);
                        R3_p.setEnabled(false);
                        R4_p.setEnabled(false);
                        break;
                    case 3:
                        R3_p.setSelected(true);
                        R1_p.setEnabled(false);
                        R2_p.setEnabled(false);
                        R3_p.setEnabled(false);
                        R4_p.setEnabled(false);
                        break;
                    default:
                        R4_p.setSelected(true);
                        R1_p.setEnabled(false);
                        R2_p.setEnabled(false);
                        R3_p.setEnabled(false);
                        R4_p.setEnabled(false);
                        break;
                }
                btnAceptar_p.setEnabled(false);
                btnAvanzar.setVisible(true);
                btnAvanzar.setEnabled(true);
                lblConfirmacion.setText("CORRECTO");
                lblConfirmacion.setForeground(new java.awt.Color(10, 193, 101));
                if (nivel_ == 5) {
                    btnTerminar.setVisible(true);
                    btnTerminar.setEnabled(true);
                    btnAvanzar.setVisible(false);
                    btnAvanzar.setEnabled(false);
                }
            } else {
                JOptionPane.showMessageDialog(this, "NO TE QUEDAN MAS COMODINES",
                        "OPS!",
                        JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_LupaMouseClicked

    private void btnTerminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTerminarMouseClicked
        nuevo_jugador.setPuntajeT(puntaje);
        nuevo_jugador.setRondas_g(1);
        nuevo_jugador.setComodines(nuevo_jugador.getComodines() + 1);
        if (!limpiarRepetidosJugador(nuevo_jugador)) {
            arrayJugadores.add(nuevo_jugador);
        }
        escribirArchivoJugadores(arrayJugadores);
        System.exit(0);
    }//GEN-LAST:event_btnTerminarMouseClicked

    private Jugador extrarInfodeJugador(String nombre) {
        for (Jugador j : arrayJugadores) {
            if (j.getNombre().equals(nombre)) {
                Jugador j1 = new Jugador(j.getNombre(), j.getComodines(), j.getRondas_g(), j.getPuntajeT());
                return j1;
            }
        }
        return new Jugador(nombre, 0, 0, 0);
    }

    private void modificarPuntajeArrayJ(Jugador jugador_aux) {
        for (Jugador j : arrayJugadores) {
            if (j.getNombre().equals(jugador_aux.getNombre())) {
                j.setPuntajeT(jugador_aux.getPuntajeT());
            }
        }

    }

    public void llenarFrmPregunta() {
        jLabel4.setText(jLabel4.getText() + ' ' + nivel_);
        numero_p = (int) ((Math.random() * (arrayPreguntas.get(nivel_ - 1).size() - 1) + 1));
        txaPregunta.setText(arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getPregunta());
        switch (arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getPosCorrecta()) {
            case 1:
                R1_p.setText(arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getrCorrecta());
                R2_p.setText(arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getR1());
                R3_p.setText(arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getR2());
                R4_p.setText(arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getR3());
                break;
            case 2:
                R2_p.setText(arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getrCorrecta());
                R1_p.setText(arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getR1());
                R3_p.setText(arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getR2());
                R4_p.setText(arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getR3());
                break;
            case 3:
                R3_p.setText(arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getrCorrecta());
                R1_p.setText(arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getR1());
                R2_p.setText(arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getR2());
                R4_p.setText(arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getR3());
                break;
            default:
                R4_p.setText(arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getrCorrecta());
                R1_p.setText(arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getR1());
                R2_p.setText(arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getR2());
                R3_p.setText(arrayPreguntas.get(nivel_ - 1).get(numero_p - 1).getR3());
                break;
        }
    }

    /**
     * METODO QUE ALMACENA EN UN ARRAY DE ARRAYS LAS PREGUNTAS, CLASIFICANDOLAS
     * POR NIVEL DE DIFICULTAD. TODAS ESTAS YA ALMACENADAS CON ANTERIORIDAD EN
     * LOS ARCHIVOS .txt
     */
    public static void cargarArchivoPreguntas() {
        arrayPreguntas = new ArrayList<>();
        File archivo;    //CREAR OBJETO FILE PARA ABRIR ARCHIVO
        FileReader fr = null;    //LEE EL ARCHIVO
        BufferedReader br;//OBJETO QUE LLEVARA A UN ARRAYLIST LO DE FR
        int nivel = 0;
        do {
            ArrayList<Pregunta> arraySec = new ArrayList<>();
            try {
                archivo = new File("PLANOS/NIVEL_" + (nivel + 1) + ".txt");
                fr = new FileReader(archivo);
                br = new BufferedReader(fr);

                String linea, palabra = "";
                while ((linea = br.readLine()) != null) {
                    ArrayList<String> arrayStr = new ArrayList<>();
                    Pregunta nueva_pregunta = new Pregunta();
                    int pos = 0;
                    char[] arrC = linea.toCharArray();
                    for (char x : arrC) {
                        switch (x) {
                            case '|':
                                if (!"".equals(palabra)) {
                                    arrayStr.add(palabra);
                                    palabra = "";
                                    pos++;
                                }
                                break;
                            case '*':
                                nueva_pregunta.setrCorrecta(palabra);
                                nueva_pregunta.setPosCorrecta(pos);
                                palabra = "";
                                break;
                            default:
                                palabra += x;
                                break;
                        }
                    }
                    nueva_pregunta.setPregunta(arrayStr.get(0));
                    nueva_pregunta.setR1(arrayStr.get(1));
                    nueva_pregunta.setR2(arrayStr.get(2));
                    nueva_pregunta.setR3(arrayStr.get(3));
                    arraySec.add(nueva_pregunta);
                }//FIN WHILE                   
            } catch (IOException e) {
                System.out.println(e);
            } finally {
                if (fr != null) {
                    try {
                        fr.close();
                    } catch (IOException e) {
                        System.out.println(e);
                    }
                }//FIN IF
            }
            arrayPreguntas.add(arraySec);
            nivel++;
        } while (nivel < 5);
    }

    /**
     * METODO QUE ALMACENA EN UN ARRAY LOS USUARIOS. TODOS ESTOS YA ALMACENADOS
     * CON ANTERIORIDAD EN LOS ARCHIVOS .txt
     */
    public static void cargarArchivoUsuarios() {
        arrayUsuarios = new ArrayList<>();
        File archivo;    //CREAR OBJETO FILE PARA ABRIR ARCHIVO
        FileReader fr = null;    //LEE EL ARCHIVO
        BufferedReader br;//OBJETO QUE LLEVARA A UN ARRAYLIST LO DE FR                           
        try {
            archivo = new File("USUARIOS/LOGIN.txt");
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);
            int pos;
            String linea;
            while ((linea = br.readLine()) != null) {
                Usuario nuevo_usuario = new Usuario();
                //NOMBRE DE USUARIO                              
                pos = linea.indexOf('|');
                nuevo_usuario.setNombre(linea.substring(0, pos));
                linea = linea.substring(pos + 1);
                //CONTRASEÑA                              
                pos = linea.indexOf('|');
                nuevo_usuario.setClave(linea.substring(0, pos));
                arrayUsuarios.add(nuevo_usuario);
            }//FIN WHILE                   
        } catch (IOException e) {
            System.out.println(e);
        } finally {
            if (fr != null) {
                try {
                    fr.close();
                } catch (IOException e) {
                    System.out.println(e);
                }
            }//FIN IF
        }
    }

    /**
     * METODO QUE ALMACENA EN UN ARRAY LOS JUGADORES. TODOS ESTOS YA ALMACENADOS
     * CON ANTERIORIDAD EN LOS ARCHIVOS .txt
     */
    public static void cargarArchivoJugadores() {
        arrayJugadores = new ArrayList<>();
        File archivo;    //CREAR OBJETO FILE PARA ABRIR ARCHIVO
        FileReader fr = null;    //LEE EL ARCHIVO
        BufferedReader br;//OBJETO QUE LLEVARA A UN ARRAYLIST LO DE FR                           
        try {
            archivo = new File("USUARIOS/JUGADORES.txt");
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);
            int pos;
            String linea;
            while ((linea = br.readLine()) != null) {
                Jugador nuevo_jugador_aux = new Jugador();
                //NOMBRE DE JUGADOR                            
                pos = linea.indexOf('|');
                nuevo_jugador_aux.setNombre(linea.substring(0, pos));
                linea = linea.substring(pos + 1);
                //PUNTAJE                              
                pos = linea.indexOf('|');
                nuevo_jugador_aux.setComodines(Integer.parseInt(linea.substring(0, pos)));
                linea = linea.substring(pos + 1);
                //RONDAS GANADAS                            
                pos = linea.indexOf('|');
                nuevo_jugador_aux.setRondas_g(Integer.parseInt(linea.substring(0, pos)));
                linea = linea.substring(pos + 1);
                //PUNTAJE ACUMULADO
                pos = linea.indexOf('|');
                nuevo_jugador_aux.setPuntajeT(Integer.parseInt(linea.substring(0, pos)));
                arrayJugadores.add(nuevo_jugador_aux);
            }//FIN WHILE                   
        } catch (IOException e) {
            System.out.println(e);
        } finally {
            if (fr != null) {
                try {
                    fr.close();
                } catch (IOException e) {
                    System.out.println(e);
                }
            }//FIN IF
        }
    }

    public static boolean validarUsuario(String usuario, String clave) {
        for (Usuario u : arrayUsuarios) {
            if (u.getNombre().equals(usuario) && u.getClave().equals(clave)) {
                return true;
            }
        }
        return false;
    }

    public static boolean validarUsuarioRepetido(String usuario) {
        for (Usuario u : arrayUsuarios) {
            if (u.getNombre().equals(usuario)) {
                return true;
            }
        }
        return false;
    }

    public static boolean limpiarRepetidosJugador(Jugador jugador_aux) {
        for (int i = 0; i < arrayJugadores.size(); i++) {
            if (arrayJugadores.get(i).getNombre().equals(jugador_aux.getNombre())) {
                arrayJugadores.get(i).setComodines(jugador_aux.getComodines());
                if (nivel_ == 5) {
                    arrayJugadores.get(i).setRondas_g(arrayJugadores.get(i).getRondas_g()
                            + 1);
                }
                arrayJugadores.get(i).setPuntajeT(arrayJugadores.get(i).getPuntajeT()
                        + puntaje/*jugador_aux.getPuntajeT()*/);
                return true;
            }
        }
        return false;
    }

    public static void escribirArchivoPreguntas(ArrayList<Pregunta> arrP, int nivel) {
        FileWriter fw = null;
        PrintWriter pw;
        try {
            fw = new FileWriter("PLANOS/NIVEL_" + nivel + ".txt");
            pw = new PrintWriter(fw);
            arrP.forEach((p) -> {
                pw.println(p.toString());
            });
            Component RootPane = null;
            JOptionPane.showMessageDialog(RootPane, "LOS DATOS FUERON GUARDADOS "
                    + "CON EXITO EN EL ARCHIVO PLANOS/NIVEL_" + nivel + ".txt");
        } catch (IOException e) {
            System.out.println("ERROR DE ESCRITURA EN EL ARCHIVO" + e);
        } finally {
            try {
                fw.close();
            } catch (IOException e) {
                System.out.println("ERROR DE ESCRITURA EN EL ARCHIVO" + e);
            }
        }
    }

    public static void escribirArchivoJugadores(ArrayList<Jugador> arrJ) {
        FileWriter fw = null;
        PrintWriter pw;
        try {
            fw = new FileWriter("USUARIOS/JUGADORES.txt");
            pw = new PrintWriter(fw);
            arrJ.forEach((p) -> {
                pw.println(p.toString());
            });
            Component RootPane = null;
            if (nivel_ == 5) {
                JOptionPane.showMessageDialog(RootPane, "LOS DATOS FUERON GUARDADOS "
                        + "CON EXITO EN EL ARCHIVO USUARIOS/JUGADORES.txt");
            }
        } catch (IOException e) {
            System.out.println("ERROR DE ESCRITURA EN EL ARCHIVO" + e);
        } finally {
            try {
                fw.close();
            } catch (IOException e) {
                System.out.println("ERROR DE ESCRITURA EN EL ARCHIVO" + e);
            }
        }
    }

    public static void escribirArchivoUsuarios(ArrayList<Usuario> arrU) {
        FileWriter fw = null;
        PrintWriter pw;
        try {
            fw = new FileWriter("USUARIOS/LOGIN.txt");
            pw = new PrintWriter(fw);
            arrU.forEach((u) -> {
                pw.println(u.toString());
            });
            Component RootPane = null;
            JOptionPane.showMessageDialog(RootPane, "LOS DATOS FUERON GUARDADOS "
                    + "CON EXITO EN EL ARCHIVO USUARIOS/LOGIN.txt");
        } catch (IOException e) {
            System.out.println("ERROR DE ESCRITURA EN EL ARCHIVO" + e);
        } finally {
            try {
                fw.close();
            } catch (IOException e) {
                System.out.println("ERROR DE ESCRITURA EN EL ARCHIVO" + e);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Circulo_lupa;
    private javax.swing.JLabel Lupa;
    private javax.swing.JRadioButton R1;
    private javax.swing.JRadioButton R1_p;
    private javax.swing.JRadioButton R2;
    private javax.swing.JRadioButton R2_p;
    private javax.swing.JRadioButton R3;
    private javax.swing.JRadioButton R3_p;
    private javax.swing.JRadioButton R4;
    private javax.swing.JRadioButton R4_p;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAceptar_p;
    private javax.swing.JButton btnAvanzar;
    private javax.swing.JButton btnIngreso;
    private javax.swing.JButton btnJugar;
    private javax.swing.JButton btnRegistro;
    private javax.swing.JButton btnTerminar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cmbNiveles;
    private javax.swing.JLabel enlaceRegistro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JPanel jpEstadisticas;
    private javax.swing.JPanel jpIngreso;
    private javax.swing.JPanel jpInicio;
    private javax.swing.JPanel jpOpciones;
    private javax.swing.JPanel jpPregunta;
    private javax.swing.JPanel jpRegistro;
    private javax.swing.JLabel lblClave;
    private javax.swing.JLabel lblComodines;
    private javax.swing.JLabel lblConfirmacion;
    private javax.swing.JLabel lblMasOpciones;
    private javax.swing.JLabel lblOpciones1;
    private javax.swing.JLabel lblPuntaje;
    private javax.swing.JLabel lblRegresar;
    private javax.swing.JLabel lblRegresar2;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JLabel lblUsuarioPantalla;
    private javax.swing.JPasswordField psContraseña1;
    private javax.swing.JPasswordField psContraseña2;
    private javax.swing.JTextArea txaNueva_pregunta;
    private javax.swing.JTextArea txaPregunta;
    private javax.swing.JPasswordField txtClave;
    private javax.swing.JTextField txtR1;
    private javax.swing.JTextField txtR2;
    private javax.swing.JTextField txtR3;
    private javax.swing.JTextField txtR4;
    private javax.swing.JTextField txtUsuario;
    private javax.swing.JTextField txtUsuario_r;
    // End of variables declaration//GEN-END:variables

    private boolean verificarCampos() {
        if (txaNueva_pregunta.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "POR FAVOR INGRESE UNA PREGUNTA",
                    "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (cmbNiveles.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(this, "POR FAVOR SELECCIONE UN NIVEL DE DIFICULTAD",
                    "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (txtR1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "POR FAVOR INGRESE UNA RESPUESTA 1",
                    "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (txtR2.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "POR FAVOR INGRESE UNA RESPUESTA 2",
                    "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (txtR3.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "POR FAVOR INGRESE UNA RESPUESTA 3",
                    "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (txtR4.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "POR FAVOR INGRESE UNA RESPUESTA 4",
                    "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (!R1.isSelected() && !R2.isSelected() && !R3.isSelected() && !R4.isSelected()) {
            JOptionPane.showMessageDialog(this, "POR FAVOR SELECCIONE CUAL SERA "
                    + "LA RESPUESTA CORRECTA",
                    "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }
}
